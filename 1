Neste projeto de automação, utilizamos o Selenium WebDriver em Java para realizar um teste em um site fictício de comércio eletrônico.
O objetivo do teste é validar o processo de adição de um produto ao carrinho de compras.
Este projeto pode ser uma referência para iniciantes que desejam explorar automação de testes com Selenium.

Código de Automação (TesteAutomacaoCompra.java):


import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class TesteAutomacaoCompra {

    private WebDriver driver;

    @Before
    public void setUp() {
        // Configuração do WebDriver (certifique-se de ter o ChromeDriver instalado e configurado)
        System.setProperty("webdriver.chrome.driver", "caminho/do/chromedriver");
        driver = new ChromeDriver();
    }

    @Test
    public void testAdicaoProdutoAoCarrinho() {
        // Abre a página do site de comércio eletrônico
        driver.get("https://exemplo.com");

        // Encontra o produto desejado e adiciona ao carrinho
        WebElement produto = driver.findElement(By.cssSelector(".produto[data-id='123']"));
        produto.click();

        // Verifica se o produto foi adicionado ao carrinho
        WebElement carrinho = driver.findElement(By.id("carrinho-icon"));
        carrinho.click();

        // Verifica se o produto está no carrinho
        WebElement itemNoCarrinho = driver.findElement(By.xpath("//div[@id='carrinho']/div[@class='item'][1]"));
        assertNotNull(itemNoCarrinho);
    }

    @After
    public void tearDown() {
        // Fecha o navegador após o teste
        driver.quit();
    }
}
-----------------------------------------------------------------------------------------------------------------------


Instruções para Execução:

1.Certifique-se de ter o Java e o ChromeDriver instalados em sua máquina.
2.Clone este repositório para sua máquina local.
3.Abra o projeto em um IDE Java de sua escolha.
4.Execute o arquivo TesteAutomacaoCompra.java como um teste JUni

Conclusão;
Este projeto oferece uma introdução simples à automação de testes com Selenium WebDriver.
Você pode utilizá-lo como um ponto de partida para explorar técnicas mais avançadas, 
como a criação de relatórios, a parametrização de testes e a integração com ferramentas de automação de CI/CD. 
Sinta-se à vontade para adaptar o código conforme necessário para atender aos requisitos específicos do seu projeto.





